class Node:

    def __init__(self, data):
        self.data = data
        self.next = None

    def getData(self):
        return self.data

    def setData(self, data):
        self.data = data

    def getNext(self):
        return self.next

    def setNext(self, next):
        self.next = next

class UnorderedList(Node):

    def __init__(self):
        self.head = None

    def isEmpty(self):
        return self.head is None

    def add(self, data):
        temp = Node(data)
        temp.setNext(self.head)
        self.head = temp

    def size(self):
        current = self.head
        count = 0
        while not (current is None):
            count += 1
            current = current.getNext()
        return count

    def search(self, data):
        current = self.head
        while not (current is None):
            if current.getData() == data:
                return True
            current = current.getNext()
        return False

    def append(self, item):
        current = self.head
        previous = None
        while current != None:
            previous = current
            current = current.getNext()

        temp = Node(item)
        if previous == None:
            self.head = temp
        else:
            previous.setNext(temp)

    def remove(self, data):
        current = self.head
        prev = None
        found = False

        while not found:
            if current.getData() == data:
                found = True
            else:
                prev = current
                current = current.getNext()
        if prev is None:
            self.head = current.getNext()
        else:
            prev.setNext(current.getNext())

    def index(self, item):
        item = Node(item)
        current = self.head
        count = 0
        while current:
            if item.getData() == current.getData():
                return count
            current = current.getNext()
            count += 1
        return None

    def pop(self, pos=None):

        if pos is None:
            current_node = self.head
            previous_node = None
            while current_node.getNext() is not None:
                previous_node = current_node
                current_node = current_node.getNext()
            data = current_node.getData()
            previous_node.setNext(current_node.getNext())
            return data
        else:
            current_node = self.head
            previous_node = None
            current_pos = 0
            while current_pos != pos:
                previous_node = current_node
                current_node = current_node.getNext()
                current_pos = current_pos + 1
            data = current_node.getData()
            previous_node.setNext(current_node.getNext())
            return data

    def insert(self, pos, item):
        if pos == 0:
            self.add(item)
        else:
            cont = 0
            next = self.head
            while pos - 1 != cont:
                next = next.next
                cont += 1
            new_item = Node(item)
            new_item.next = next.next
            next.next = new_item

if __name__ == "__main__":
    U = UnorderedList()
    U.add(1)
    print(U)
    U.add('dog')
    print(U)
    U.add(3)
    print(U)
    U.remove(1)
    print(U)
    U.search(5)
    print(U)
    print(U.isEmpty())
    print(U.size())
    U.append(3, 5)
    print(U)
    U.index(2)
    print(U)
    U.insert(2, 7)
    print(U)
    U.pop()
    print(U)
    U.pop(1)
    print(U)
