class Node:

    def __init__(self, data):
        self.data = data
        self.next = None

    def getData(self):
        return self.data

    def setData(self, data):
        self.data = data

    def getNext(self):
        return self.next

    def setNext(self, next):
        self.next = next

class UnorderedList:

    def __init__(self):
        self.head = None

    def isEmpty(self):
        return self.head is None

    def add(self, data):
        temp = Node(data)
        temp.setNext(self.head)
        self.head = temp

    def size(self):
        current = self.head
        count = 0
        while not (current is None):
            count += 1
            current = current.getNext()
        return count

    def search(self, data):
        current = self.head
        while not (current is None):
            if current.getData() == data:
                return True
            current = current.getNext()
        return False

    def remove(self, data):
        current = self.head
        prev = None
        found = False

        while not found:
            if current.getData() == data:
                found = True
            else:
                prev = current
                current = current.getNext()
        if prev is None:
            self.head = current.getNext()
        else:
            prev.setNext(current.getNext())

    UnorderedList = []
    U = UnorderedList()
    U.add(1, 2, 3, 4, 5)
    print(U)
    U.remove(2,3)
    print(U)
    U.search(5)
    print(U)
    print(U.isEmpty())
    print(U.size())
    U.append(6, 7)
    print(U)
    U.index(2)
    print(U)
    U.insert(2, 7)
    print(U)
    U.pop()
    print(U)
    U.pop(pos)
    print(U)



